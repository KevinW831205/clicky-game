{"version":3,"sources":["components/Container.js","components/Image.js","components/Score.js","components/EndModal.js","components/InstructionModal.js","App.js","index.js"],"names":["Container","props","react_default","a","createElement","className","children","Image","alt","src","image","onClick","imageClick","id","Score","type","instructionShow","currentScore","highScore","EndModal","Modal_default","show","onHide","handleClose","Header","closeButton","Title","Body","score","instructionModal","App","state","imageState","initialGameState","endModalShow","instructionModalShow","endModalHandleClose","_this","setState","resetGame","endModalHandleShow","instructionModalHandleClose","instructionModalHandleShow","increaseScore","resetedState","map","data","clicked","index","findIndex","console","log","shuffleImage","newState","shuffleState","sort","Math","random","_this2","this","components_Container","components_Score","components_Image","key","components_EndModal","handleShow","InstructionModal","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ce111d2c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Container.css\"\n\nfunction Container(props) {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div >\n    )\n}\n\n\nexport default Container","import React from \"react\";\nimport \"./Image.css\"\n\nfunction Image(props) {\n    return (\n        <div className=\"col-sm-3\">\n            {/* <h6>{props.id}</h6> */}\n            <img className =\"shadow imageStyle z-depth-3\" alt=\"images\" src={props.image} onClick={() => props.imageClick(props.id)} />\n        </div >\n    )\n}\n\nexport default Image","import React from \"react\";\nimport \"./Score.css\"\n\nfunction Score(props) {\n    return (\n        <div className=\"score-container\">\n            <h4 className=\"row\">\n                <span className=\"title col-sm-7\">Clicky Game</span>\n                <span className=\"col-sm-2\">\n                    <button type=\"button\" className=\"btn btn-light\" id=\"instruction\"\n                        onClick={() => {\n                            props.instructionShow()\n                        }}>\n                        Instructions\n                    </button>\n                </span>\n\n                <span className=\"scores col-sm-3\">\n                    <p>Current Score: {props.currentScore}</p>\n                    <p>High Score: {props.highScore}</p>\n                </span>\n            </h4>\n            {/* <h4 className=\"scores\">Current Score: {props.currentScore} | High Score: {props.highScore}</h4> */}\n        </div>\n    )\n}\n\nexport default Score","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\"\nimport Button from \"react-bootstrap/Button\"\n\n\n// import { Button, Icon } from 'react-materialize'\n\n\n// const display = { display: \"block\" };\n// const hide = { display: \"none\" };\n\n// class Modal extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.toggle = this.toggle.bind(this);\n//         this.state = {\n//             toggle: false\n//         }\n//     }\n\n//     toggle(event) {\n//         this.setState(prevState => ({ toggle: !prevState.toggle }));\n//     }\n\n//     render() {\n//         var modal = [];\n//         modal.push(\n//             <div className=\"modal\" style={this.state.toggle ? display : hide}>\n//                 <div className=\"modal-content\">\n//                     <h4>Modal Header</h4>\n//                     <p>A bunch of text</p>\n//                 </div>\n//                 <div className=\"modal-footer\">\n//                     <a className=\"btn\" onClick={this.toggle}>Agree</a>\n//                 </div>\n//             </div>\n//         );\n//         return (\n//             <div>\n//                 <a className=\"btn\" onClick={this.toggle}>Modal</a>\n//                 {modal}\n//             </div>\n//         );\n//     }\n\n// }\n\n// export default Modal;\n\nfunction EndModal(props) {\n    return (\n        <Modal show={props.show} onHide={props.handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Game Ended</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Your Score: {props.score}</Modal.Body>\n        </Modal>\n    )\n}\n\n// class ModalRef extends React.Component {\n//     constructor(props, context) {\n//         super(props, context);\n\n//         this.handleShow = this.handleShow.bind(this);\n//         this.handleClose = this.handleClose.bind(this);\n\n//         this.state = {\n//             show: false,\n//         };\n//     }\n\n//     handleClose() {\n//         this.setState({ show: false });\n//     }\n\n//     handleShow() {\n//         this.setState({ show: true });\n//     }\n\n//     render() {\n//         return (\n//             <>\n//                 <Button variant=\"primary\" onClick={this.handleShow}>\n//                     Launch demo modal\n//           </Button>\n\n//                 <Modal show={this.state.show} onHide={this.handleClose}>\n//                     <Modal.Header closeButton>\n//                         <Modal.Title>Modal heading</Modal.Title>\n//                     </Modal.Header>\n//                     <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n//                     <Modal.Footer>\n//                         <Button variant=\"secondary\" onClick={this.handleClose}>\n//                             Close\n//               </Button>\n//                         <Button variant=\"primary\" onClick={this.handleClose}>\n//                             Save Changes\n//               </Button>\n//                     </Modal.Footer>\n//                 </Modal>\n//             </>\n//         );\n//     }\n// }\n\nexport default EndModal","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\"\r\n\r\n\r\nfunction instructionModal(props) {\r\n    return (\r\n        <Modal show={props.show} onHide={props.handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Instructions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ul>\r\n                    <li>Click on images you haven't clicked before to gain score</li>\r\n                    <li>Game ends when you click on an image twice</li>\r\n                </ul>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default instructionModal","import React from \"react\";\nimport Container from \"./components/Container\"\nimport Image from \"./components/Image\";\nimport Score from \"./components/Score\";\nimport initialGameState from \"./initialGameState.json\";\nimport \"./App.css\"\n\n// Materialize things \n// import Button from \"./components/Button\";\n// import Modal from \"./components/Modal\";\n// import M from \"materialize-css\";\n\n\n//Bootstrap things\nimport EndModal from \"./components/EndModal\";\nimport InstructionModal from \"./components/InstructionModal\";\n\nclass App extends React.Component {\n  state = {\n    imageState: initialGameState, //game state containing images and whether if the image is clicked\n    currentScore: 0,\n    highScore: 0,\n    endModalShow: false,   //modal display if true\n    instructionModalShow: false\n\n  }\n\n  //Modal functions\n  endModalHandleClose = () => {\n    this.setState({ endModalShow: false });\n    this.resetGame();\n  }\n\n  endModalHandleShow = () => {\n    this.setState({ endModalShow: true });\n  }\n\n  instructionModalHandleClose = () => {\n    this.setState({ instructionModalShow: false })\n  }\n\n  instructionModalHandleShow = () => {\n    this.setState({ instructionModalShow: true })\n  }\n  //end modal funcitons\n\n  //Game functions\n  increaseScore = () => {\n    //function to increase score and update highscore\n    let currentScore = this.state.currentScore;\n    currentScore += 1;\n    this.setState({ currentScore: currentScore });\n    // highscore update if current score is greater than the highscore\n    currentScore > this.state.highScore && this.setState({ highScore: currentScore })\n  }\n\n  resetGame = () => {\n    const resetedState = this.state.imageState.map(data => {\n      data.clicked = false;\n      return data\n    })\n    this.setState({\n      currentScore: 0,\n      imageState: resetedState\n    })\n  }\n\n  imageClick = id => {\n    // on click for the image, processes game logic for if clikcked is true or false\n    // obtain the index of the image in the array\n    const index = this.state.imageState.findIndex(data => data.id === id);\n    console.log(index)\n    if (!this.state.imageState[index].clicked) {\n      // if clicked is false\n      console.log(\"score+1\")\n      let newState = this.state.imageState;\n      newState[index].clicked = true;\n      this.setState(newState);\n      this.increaseScore();\n      this.shuffleImage();\n    } else {\n      //if clicked is true\n      console.log(\"lose\")\n      this.endModalHandleShow();\n      this.shuffleImage();\n    }\n  }\n\n  shuffleImage = () => {\n    // function that randomize the order of the imageState\n    let shuffleState = this.state.imageState;\n    shuffleState.sort(() => Math.random() - 0.5);\n    console.log(shuffleState);\n    this.setState({ imageState: shuffleState });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Score\n          highScore={this.state.highScore}\n          currentScore={this.state.currentScore}\n          instructionShow={this.instructionModalHandleShow}\n        />\n\n        <div className=\"row\" id=\"gameWindow\">\n          {this.state.imageState.map(data => {\n            return (\n              <Image\n                id={data.id}\n                key={data.id}\n                image={data.image}\n                clicked={data.clicked}\n                imageClick={this.imageClick}\n              />\n            )\n          })\n          }\n        </div>\n\n        <EndModal\n          show={this.state.endModalShow}\n          handleClose={this.endModalHandleClose}\n          handleShow={this.endModalHandleShow}\n          score={this.state.currentScore}\n        />\n\n        <InstructionModal\n          show={this.state.instructionModalShow}\n          handleClose={this.instructionModalHandleClose}\n          handleShow={this.instructionModalHandleShow}\n        />\n\n      </Container>\n    )\n  }\n\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}